name: AI Code Review

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  review:
    runs-on: ubuntu-latest
    env:
      OPENAI_MODEL: gpt-4o-mini
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Ensure jq installed
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Compute DIFF
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          else
            BASE_SHA="$(git rev-parse HEAD~1)"
            HEAD_SHA="$(git rev-parse HEAD)"
          fi
          git diff --unified=0 --no-color --diff-filter=AMCR $BASE_SHA $HEAD_SHA > diff.patch || true
          MAX=512000
          [ $(wc -c < diff.patch) -gt $MAX ] && head -c $MAX diff.patch > diff.tmp && mv diff.tmp diff.patch

      - name: Run AI Review
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_MODEL: ${{ env.OPENAI_MODEL }}
        run: node .github/workflows/ai-review.mjs

      - name: Post comment to PR
        if: ${{ github.event_name == 'pull_request' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          FILE=".github/workflows/ai-review.out.md"
          if [ -f "$FILE" ]; then
            BODY=$(jq -Rs . < "$FILE")
            curl -s -X POST \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/repos/$REPO/issues/$PR_NUMBER/comments \
              -d "{\"body\": $BODY}" > /dev/null
          fi